[

{
"id": "-201103-wt",
"title": "WindowsTerminalをそのディレクトリで開くために",
"author": null,
"tags": ["Windows", "WindowsTerminal", "備忘録"],
"url": "/201103/wt/",
"date": "2020-11-03",
"content": "前提  Windows 10 Home 64-bit Version 20H2  Windows Terminal 1.3.2651.0  レジストリ改変時は、事前のバックアップ(エクスポート)を忘れずに！高機能で使いやすく、開発も活発なWindows Terminal現時点でカレントディレクトリから開くのがまだまだなので、独自にビルドせずに自分で実装してみました。カレントディレクトリで開くにはGithubのリポジトリでこのissueを発見しました。wt -d .またはwt -d &lt;パス&gt;でできる模様です。コマンドラインからの起動の方法を改変このような操作をしたときに、エクスプローラーのカレントディレクトリで起動できるようにします。起動用exeを作成class Program{    public static void Main(string[] args)    {        var envPathLocalAppData = Environment.GetEnvironmentVariable(\"LOCALAPPDATA\");        Process.Start(envPathLocalAppData + \"\\\\Microsoft\\\\WindowsApps\\\\wt.exe\", \"-d .\");    }}バッチファイルやVBScriptだと、レジストリPathが動作しないので、exeファイルとして作りました。環境変数Pathを作って、既存のレジストリPathを消去する場合はバッチファイルでできます。レジストリの編集HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\wt.exeの既定値を作成したexeのパス、Path値をexeのあるフォルダパスに設定します。explorer.exeの再起動できました。ただし、これだといつかレジストリ設定が戻されるので、スタートアップなりサービスなりで値を保護する必要がありそうです。もしくは、UWPアプリを自作してwt.exeとして起動するように定義すれば…右クリックメニューを追加現バージョンでは、フォルダーの選択時にOpen in Windows Terminalが表示されますが、何もない場所を右クリックして開けるようにしたい。これは、レジストリを改変するだけで行けました。[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\Directory\\Background\\shell\\Windows Terminal で開く\\command]@=\"C:\\\\Users\\\\(ユーザー名)\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\wt.exe -d .\""
}, 

{
"id": "-200922-disable_docomo",
"title": "Android 10版 システムアプリの強制無効化方法",
"author": null,
"tags": ["Android", "備忘録"],
"url": "/200922/disable-docomo/",
"date": "2020-09-22",
"content": "  以下の内容は、docomo版Galaxy A20 (SC-02M) の Android 10 で動作確認をしています。他の機種や、Androidのバージョンによっては使えない可能性もあります。有名なコマンドも引き続き利用可能adb shell pm uninstall -k --user 0 &lt;package name&gt;このコマンドは引き続き使えます。実はあまり知られていないコマンド次のコマンドも使えることを確認しました。adb shell pm disable-user &lt;package name&gt;それぞれの挙動の違いuninstalladb shell pm uninstall -k --user 0 &lt;package name&gt;を実行すると、アプリがアンインストールされます。(厳密には/system配下に残存)Androidの設定画面のアプリ一覧からも姿を消すため、復活させるには以下のコマンドを打つ必要があります。adb shell pm install-existing &lt;package name&gt;disable-user試しに実行してみました。$ adb shell pm disable-user com.android.contactsPackage com.android.contacts new state: disabled-user出力結果の通り、このコマンドは、パッケージに「ユーザーで無効化」属性が付与されます。つまり、アプリが無効化されています。そのため、Androidの設定画面から、アプリが無効化されていることが確認できます。強制的に無効化できるため、設定画面からでは無効化できない (「無効」ボタンがグレーアウトされている) アプリでも使えます。なお、有効化するには、設定で「有効」ボタンを押すか、以下のコマンドを入力することで有効化できます。adb shell pm enable &lt;package name&gt;使い分け方uninstallアプリの存在を消すことができるため、将来的に有効化する可能性がない場合に使えます。アプリリストに表示されるだけでも煩わしい場合に有効です。disable-userを実行してもすぐに復活するアプリにはこれしかありません。元に戻すのには、adbコマンドか初期化しかないため、面倒になります。disable-user設定画面には残るため、簡単に有効化できます。今は使わないけど、将来的に使うかもしれない場合に有効です。この方法で無効化しても、再起動で復活する可能性があります。"
}, 

{
"id": "-200830-sl",
"title": "WindowsでSLを走らせたい",
"author": null,
"tags": ["Windows", "Linux", "Ubuntu", "備忘録"],
"url": "/200830/sl/",
"date": "2020-08-30",
"content": "SL for Win32 Console新山(へろぱ) 様によりSL for Win32 Consoleが公開されているのでそれを使えばOK。しかも音が鳴るという謎仕様 神仕様。Windows Subsystem for Linuxdism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all「Windowsの機能の有効化または無効化」よりWSLを有効化。再起動後、Microsoft Storeから好きなディストリビューションをダウンロード、インストールして初期設定。その後、PS &gt; wsl.exe(WSL) $ sudo apt update(WSL) $ sudo apt install sl(WSL) $ slでSLが拝める。PATH内に@wsl.exe sl %*%をsl.batで保存すれば、直接呼べるようになる。ただ、自分の環境だとなぜか爆速でSLが走り去ってしまうので、次の方法を試した。MinGW-gcc でビルドgit clone https://github.com/mtoyoda/sl.gitcd slをして gcc -o sl.exe sl.c でできるかと思ったらできなかったので、結果的にmingw-get install mingw32-libncurses # すでに行われているなら不要Set-Variable mingw_path (MinGWのパス)gcc -I ${mingw_path}\\include\\ncurses -o sl.exe sl.c ${mingw_path}\\lib\\libncurses.a.\\sl.exeでできた。なんかすごい遅いけど満足満足。ちなみにこれを実行した後に、もう一回WSLで実行したらこれぐらい遅くなった…謎。"
}, 

{
"id": "-200823-hello",
"title": "Hello, World",
"author": null,
"tags": [],
"url": "/200823/hello/",
"date": "2020-08-23",
"content": "Hello, WorldHello Blog!!"
}

]
